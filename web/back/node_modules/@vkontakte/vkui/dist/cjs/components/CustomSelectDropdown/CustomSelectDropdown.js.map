{"version":3,"sources":["../../../../src/components/CustomSelectDropdown/CustomSelectDropdown.tsx"],"names":["calcIsTop","placement","includes","CustomSelectDropdown","children","targetRef","scrollBoxRef","fetching","parentOnPlacementChange","onPlacementChange","offsetDistance","sameWidth","forcePortal","restProps","React","useState","isTop","setIsTop","customModifiers","useMemo","current","name","enabled","phase","effect","instance","observer","MutationObserver","forceUpdate","observe","childList","disconnect","useCallback"],"mappings":"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","sourcesContent":["import * as React from \"react\";\nimport { Modifier } from \"react-popper\";\nimport { CustomScrollView } from \"../CustomScrollView/CustomScrollView\";\nimport { classNames } from \"../../lib/classNames\";\nimport { Popper, Placement } from \"../Popper/Popper\";\nimport { Spinner } from \"../Spinner/Spinner\";\nimport { HasRef } from \"../../types\";\nimport \"./CustomSelectDropdown.css\";\n\nexport interface CustomSelectDropdownProps\n  extends React.HTMLAttributes<HTMLElement>,\n    HasRef<HTMLDivElement> {\n  targetRef: React.RefObject<HTMLElement>;\n  placement?: Placement;\n  scrollBoxRef?: React.RefObject<HTMLDivElement>;\n  fetching?: boolean;\n  offsetDistance?: number;\n  sameWidth?: boolean;\n  forcePortal?: boolean;\n  onPlacementChange?: (placement?: Placement) => void;\n}\n\nconst calcIsTop = (placement?: Placement) => placement?.includes(\"top\");\n\nexport const CustomSelectDropdown: React.FC<CustomSelectDropdownProps> = ({\n  children,\n  targetRef,\n  scrollBoxRef,\n  placement,\n  fetching,\n  onPlacementChange: parentOnPlacementChange,\n  offsetDistance = 0,\n  sameWidth = true,\n  forcePortal = true,\n  ...restProps\n}) => {\n  const [isTop, setIsTop] = React.useState(() => calcIsTop(placement));\n\n  const customModifiers = React.useMemo<Array<Modifier<string>>>(() => {\n    if (!scrollBoxRef?.current) {\n      return [];\n    }\n\n    return [\n      {\n        name: \"customSelectChildrenChange\",\n        enabled: true,\n        phase: \"main\",\n        effect: ({ instance }) => {\n          const observer = new MutationObserver(instance.forceUpdate);\n\n          observer.observe(scrollBoxRef.current as Element, {\n            childList: true,\n          });\n\n          return () => {\n            observer.disconnect();\n          };\n        },\n      },\n    ];\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [scrollBoxRef?.current]);\n\n  const onPlacementChange = React.useCallback(\n    ({ placement }: { placement?: Placement }) => {\n      setIsTop(calcIsTop(placement));\n      parentOnPlacementChange?.(placement);\n    },\n    [parentOnPlacementChange, setIsTop]\n  );\n\n  return (\n    <Popper\n      targetRef={targetRef}\n      offsetDistance={offsetDistance}\n      sameWidth={sameWidth}\n      onPlacementChange={onPlacementChange}\n      placement={placement}\n      vkuiClass={classNames(\n        \"CustomSelectDropdown\",\n        offsetDistance === 0 &&\n          (isTop\n            ? \"CustomSelectDropdown--top\"\n            : \"CustomSelectDropdown--bottom\"),\n        sameWidth && \"CustomSelectDropdown--wide\"\n      )}\n      forcePortal={forcePortal}\n      customModifiers={customModifiers}\n      {...restProps}\n    >\n      <CustomScrollView\n        boxRef={scrollBoxRef}\n        vkuiClass=\"CustomSelectDropdown__in\"\n      >\n        {fetching ? (\n          <div vkuiClass=\"CustomSelectDropdown__fetching\">\n            <Spinner size=\"small\" />\n          </div>\n        ) : (\n          children\n        )}\n      </CustomScrollView>\n    </Popper>\n  );\n};\n"],"file":"CustomSelectDropdown.js"}